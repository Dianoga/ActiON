var Action=new Backbone.Marionette.Application;Action.Device=Backbone.Model.extend({initialize:function(){this.set("device_id",this.get("id")),this.set("id",this.get("type")+"_"+this.get("id")),this.set("updating",!1),this.primary&&(this.listenTo(this,"change:"+this.primary,this.setStatus),this.setStatus())},setStatus:function(){this.set("status",this.get(this.primary))},sendCommand:function(e,t){var i=this;i.set("updating",!0);var n=i.get("id").split("_")[1],t=t||i.get("type");Action.sendCommand(n,t,e,function(){Action.config.pusher_app||Action.updateData()})}}),Action.Devices=Backbone.Collection.extend({model:Action.Device}),Action.DeviceTypes=Backbone.Collection.extend({initialize:function(){this.listenTo(this,"add",function(e){Action.devices.add(e)}),this.listenTo(this,"remove",function(e){Action.devices.remove(e)})}}),Action.Contact=Action.Device.extend({primary:"contact"}),Action.Contacts=Action.DeviceTypes.extend({model:Action.Contact}),Action.Dimmer=Action.Device.extend({primary:"switch"}),Action.Dimmers=Action.DeviceTypes.extend({model:Action.Dimmer}),Action.Humidity=Action.Device.extend({primary:"humidity"}),Action.Humidities=Action.DeviceTypes.extend({model:Action.Humidity}),Action.Lock=Action.Device.extend({primary:"lock"}),Action.Locks=Action.DeviceTypes.extend({model:Action.Lock}),Action.Link=Action.Device.extend(),Action.Links=Action.DeviceTypes.extend({model:Action.Link}),Action.Momentary=Action.Device.extend(),Action.Momentaries=Action.DeviceTypes.extend({model:Action.Momentary}),Action.Motion=Action.Device.extend({primary:"motion"}),Action.Motions=Action.DeviceTypes.extend({model:Action.Motion}),Action.Presence=Action.Device.extend({primary:"presence"}),Action.Presences=Action.DeviceTypes.extend({model:Action.Presence}),Action.Switch=Action.Device.extend({primary:"switch"}),Action.Switches=Action.DeviceTypes.extend({model:Action.Switch}),Action.Temperature=Action.Device.extend({primary:"temperature"}),Action.Temperatures=Action.DeviceTypes.extend({model:Action.Temperature}),Action.Mode=Action.Device.extend({defaults:{name:"Mode"}}),Action.Weather=Action.Device.extend({defaults:{type:"weather"},weatherIcons:{chanceflurries:"snow",chancerain:"rain",chancesleet:"sleet",chancesnow:"snow",chancetstorms:"rain",clear:"clear-day",cloudy:"cloudy",flurries:"snow",fog:"fog",hazy:"fog",mostlycloudy:"cloudy",mostlysunny:"clear-day",partlycloudy:"partly-cloudy-day",partlysunny:"partly-cloudy-day",rain:"rain",sleet:"sleet",snow:"snow",sunny:"clear-day",tstorms:"rain",nt_chanceflurries:"snow",nt_chancerain:"rain",nt_chancesleet:"sleet",nt_chancesnow:"snow",nt_chancetstorms:"rain",nt_clear:"clear-night",nt_cloudy:"cloudy",nt_flurries:"snow",nt_fog:"fog",nt_hazy:"fog",nt_mostlycloudy:"partly-cloudy-night",nt_mostlysunny:"partly-cloudy-night",nt_partlycloudy:"partly-cloudy-night",nt_partlysunny:"partly-cloudy-night",nt_sleet:"sleet",nt_rain:"rain",nt_snow:"snow",nt_sunny:"clear-night",nt_tstorms:"rain"},initialize:function(){this.set("id","weather"),this.set("device_id","weather"),this.setup(),this.listenTo(this,"change:status",this.setup)},setup:function(){var e=this.get("status");this.set(_.extend(e.conditions,e.astronomy)),this.set("location",this.get("display_location").full),this.set("skycon",this.weatherIcons[this.get("icon")]);var t=this.get("sunrise"),i=this.get("sunset");this.set("sunrise",t.hour+":"+t.minute+" AM"),this.set("sunset",i.hour-12+":"+i.minute+" PM")}}),Action.DeviceView=Marionette.ItemView.extend({className:function(){return"st-tile "+this.model.get("type")},getTemplate:function(){var e="#_st-"+this.model.get("type");return 0===$(e).length&&(e="#_st-device"),e},bindings:{".st-title":"name",".fa":{observe:"status",update:"getIcon"}},icons:{},onRender:function(){this.stickit(),this.listenTo(this.model,"change:updating",function(){var e=this.model.get("updating");this.$el.toggleClass("updating",e)})},getIcon:function(e,t){_.each(this.icons,function(i,n){e.toggleClass(i,n==t)})}}),Action.ContactView=Action.DeviceView.extend({icons:{closed:"fa-compress",open:"fa-expand"}}),Action.SwitchView=Action.DeviceView.extend({icons:{off:"fa-toggle-off",on:"fa-toggle-on"},events:{click:"toggle"},toggle:function(){this.model.sendCommand("toggle")}}),Action.DimmerView=Action.SwitchView.extend({initialize:function(){this.bindings=_.extend({},this.bindings,{"[name=dimmer]":{observe:"level"}}),this.events["change input"]=this.dimmerChange,this.events["click input"]=function(e){e.stopPropagation()}},dimmerChange:function(e){e.stopPropagation(),this.model.sendCommand(this.model.get("level"))}}),Action.PresenceView=Action.DeviceView.extend({icons:{"not present":"fa-map-marker-away",present:"fa-map-marker"}}),Action.MotionView=Action.DeviceView.extend({icons:{inactive:"fa-square-o",active:"fa-square"}}),Action.LockView=Action.DeviceView.extend({icons:{unlocked:"fa-unlock-alt",locked:"fa-lock"}}),Action.MomentaryView=Action.DeviceView.extend({icons:{"":"fa-circle-o"}}),Action.LinkView=Action.DeviceView.extend({icons:{"":"fa-circle-o"},initialize:function(){this.bindings=_.extend({},this.bindings,{a:{attributes:[{observe:"status",name:"href"}]}})}}),Action.TemperatureView=Action.DeviceView.extend({initialize:function(){this.bindings=_.extend({},this.bindings,{".st-icon":{observe:"status",onGet:function(e){return e+"°"}}})}}),Action.ModeView=Action.DeviceView.extend({initialize:function(){this.bindings[".st-icon"]={observe:"status"}},onRender:function(){this.stickit(),this.listenTo(this.model,"change:updating",function(){var e=this.model.get("updating");this.$el.toggleClass("updating",e)})},changeMode:function(e){this.model.sendCommand($(e.currentTarget).data().mode,"mode")},changePhrase:function(e){this.model.sendCommand($(e.currentTarget).data().phrase,"hellohome")}}),Action.HumidityView=Action.TemperatureView.extend({initialize:function(){this.bindings=_.extend({},this.bindings,{".st-icon":{observe:"status",onGet:function(e){return e+"%"}}})}}),Action.WeatherView=Action.DeviceView.extend({bindings:{".st-title":"location",".w-temperature":{observe:"temp_f",onGet:function(e){return e+"°"}},".w-humidity":{observe:"relative_humidity",onGet:function(e){return"Humidity: "+e}},".w-status":{observe:["weather","feelslike_f"],onGet:function(e){return e[0]+", feels like "+e[1]+"°"}},".sunrise":"sunrise",".sunset":"sunset"},initialize:function(){this.skycons=new Skycons({color:"white"})},onRender:function(){this.stickit(),this.skycons.add(this.$el.find("canvas")[0],this.model.get("skycon")),this.skycons.play()}}),Action.DevicesView=Marionette.CollectionView.extend({getChildView:function(e){return e instanceof Action.Contact?Action.ContactView:e instanceof Action.Dimmer?Action.DimmerView:e instanceof Action.Switch?Action.SwitchView:e instanceof Action.Motion?Action.MotionView:e instanceof Action.Temperature?Action.TemperatureView:e instanceof Action.Humidity?Action.HumidityView:e instanceof Action.Presence?Action.PresenceView:e instanceof Action.Lock?Action.LockView:e instanceof Action.Momentary?Action.MomentaryView:e instanceof Action.Link?Action.LinkView:e instanceof Action.Weather?Action.WeatherView:e instanceof Action.Mode?Action.ModeView:Action.DeviceView},initialize:function(){},onRender:function(){}}),Action.updateData=function(){$.ajax({url:Action.dataUri,dataType:"jsonp",data:{access_token:Action.config.access_token},success:function(e){console.log(e),Action.contacts.set(new Action.Contacts(e.contacts).models),Action.dimmers.set(new Action.Dimmers(e.dimmers).models),Action.humidities.set(new Action.Humidities(e.humidity).models),Action.locks.set(new Action.Locks(e.locks).models),Action.links.set(new Action.Links(e.links).models),Action.momentaries.set(new Action.Momentaries(e.momentary).models),Action.motions.set(new Action.Motions(e.motion).models),Action.presences.set(new Action.Presences(e.presence).models),Action.switches.set(new Action.Switches(e.switches).models),Action.temperatures.set(new Action.Temperatures(e.temperature).models);var t=new Action.Weather(e.weather),i=new Action.Mode(_.extend(e.hellohome,e.mode)),n={at:0,merge:!0};Action.devices.add(i,n),Action.devices.add(t,n),Action.config.pusher_app?Action.setupPusher():Action.config.refresh&&(Action.refreshTimeout=_.delay(Action.updateData,60*Action.config.refresh*1e3))}})},Action.setupPusher=function(){var e=new Pusher(Action.config.pusher_app),t=e.subscribe("devices");t.bind("device_update",Action.pusherDeviceUpdate)},Action.pusherDeviceUpdate=function(e){var t=Action.devices.findWhere({device_id:e.id});t&&(t.set(e.name,e.value),t.set("updating",!1))},Action.sendCommand=function(e,t,i,n){$.ajax({url:Action.commandUri,dataType:"jsonp",data:{access_token:Action.config.access_token,id:e,type:t,value:i},complete:n||function(){}})},Action.addInitializer(function(){Action.devices=new Action.Devices,Action.contacts=new Action.Contacts,Action.dimmers=new Action.Dimmers,Action.humidities=new Action.Humidities,Action.locks=new Action.Locks,Action.links=new Action.Links,Action.momentaries=new Action.Momentaries,Action.motions=new Action.Motions,Action.presences=new Action.Presences,Action.switches=new Action.Switches,Action.temperatures=new Action.Temperatures,Action.dataUri=Action.config.uri+"data",Action.commandUri=Action.config.uri+"command",Action.updateData(),Action.addRegions({container:"#container"}),Action.container.show(new Action.DevicesView({collection:Action.devices}))});